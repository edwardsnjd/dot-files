#!/usr/bin/env bash

# Render selected file or directory
# Usage: render file [width] [height] [opts]
#
# Optionally make the html render text only:
#   RENDER_SIMPLE_HTML=1 render foo.html

set -o nounset
set -o errexit
set -o pipefail
#set -o xtrace

function main() {
  if [ -d "$1" ]; then
    render_directory "$@"
  else
    render_file "$@"
  fi
}

function render_directory() {
  local directory="${1%%/}"
  shift

  local format="full"
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --simple) format="simple" ;;
      --full) format="full" ;;
      *) break ;;
    esac
    shift
  done

  case "$format" in
    simple) render_directory_simple "$directory" "$@" ;;
    full) render_directory_full "$directory" "$@" ;;
    *) echo "Unknown format '$format'" >&2 ;;
  esac
}

function render_directory_simple() {
  local directory="${1%%/}"
  exa \
    --header \
    --tree \
    --git \
    --group-directories-first \
    --all \
    --git-ignore \
    --ignore-glob ".git" \
    --classify \
    --color always \
    --level 2 \
    "$directory"
}

function render_directory_full() {
  local directory="${1%%/}"
  # HACK: Limit max depth to 5 to make listing ~ possible
  exa \
    --header \
    --tree \
    --git \
    --group-directories-first \
    --all \
    --git-ignore \
    --ignore-glob ".android|.cargo|.git|node_modules" \
    --classify \
    --color always \
    --level 5 \
    --long \
    "$directory"
}

function render_file() {
  case ${1,,} in
    *.png|*.gif|*.jpg|*.jpeg|*.mov|*.mp4|*.3gp)
      render_visual "$@";;
    *.zip)
      render_zip "$@";;
    *.svg)
      render_svg "$@";;
    *.md)
      render_markdown "$@";;
    *.html)
      render_html "$@";;
    *.pdf)
      render_pdf "$@";;
    *)
      render_textual "$@";;
  esac
}

function render_visual() {
  chafa \
    --animate=false \
    --duration=0 \
    --work=1 \
    --size "${2:-$(tput cols)}x${3:-$(tput lines)}" \
    "$1"
}

function render_zip() {
  zipinfo "$1"
}

function render_svg() {
  local file="$1"
  shift

  local png="$(mktemp).png"
  convert "svg:$file" "$png"
  render_visual "$png" "$@"
  rm "$png"
}

function render_markdown() {
  glow \
    --width "${2:-$(tput cols)}" \
    --style "$XDG_CONFIG_HOME/glow/dark-tight.json" \
    "$1"
}

function render_html() {
  if [[ -n ${RENDER_SIMPLE_HTML:-} ]]; then
    w3m -dump -o display_borders=1 "$1"
  else
    local file="$1"
    shift
    render_markdown <(pandoc --to markdown "$file") "$@"
  fi
}

function render_pdf() {
  pdftotext -layout "$1" -
}

function render_textual() {
  bat --force-colorization --plain --paging "never" "$1"
}

main "$@"
