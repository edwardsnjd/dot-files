#!/usr/bin/env bash

# USAGE
#   dated [--all] <path>
#   dated --interactive [--all] <path>
#   dated --list [--all] <path>
#
# DEPENDENCIES
#  - fd - faster finding files
#  - fzf - interactive fuzzy finding
#  - GNU utils - text processing

set -o nounset
set -o errexit
set -o pipefail
#set -o xtrace

function Main() {
  local cmd="interactive"
  local all=0

  local others=()
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -l|--list) cmd="list" && shift ;;
      -i|--interactive) cmd="interactive" && shift ;;
      --all) all=1 && shift ;;
      -*|--*) echo "Unknown option $1" && exit 1 ;;
      *) others+=("$1") && shift ;;
    esac
  done
  set -- "${others[@]}"

  case "$cmd" in
    interactive) Interactive $all "$@" ;;
    list) List $all "$@" ;;
  esac
}

function Interactive() {
  List "$@" \
    | sort --dictionary-order -k1,1 \
    | column -t -s $'\t' \
    | fzf \
      --reverse \
      --no-sort \
      --bind "ctrl-s:toggle-sort"
}

function List() {
  local all=$1; shift
  ListFiles "$@" \
    | sed -E 's/(\b|_)((19|20)[0-9]{2}(-[01][0-9](-[0-3][0-9])?)?)(\b|_)/\1<<\2>>\6/g' \
    | awk -v OFS=$'\t' -v all="$all" '{
        line = $0
        printed = 0
        while (match($0, /<<[^>]*>>/)) {
          num = substr($0, RSTART+2, RLENGTH-4)
          $0 = substr($0, RSTART + RLENGTH)
          printed += 1
          print num, line
        }
        if (all && !printed) {
          print "????-??-??", line
        }
      }' \
    | sed -E 's/<<//g ; s/>>//g'
}

function ListFiles() {
  fd . --type file "$@"
}

function TestFiles() {
cat <<EOF
# Bad
a.pdf
1.pdf
19991.pdf
2000a.pdf
f1999.pdf

# Good
1999.pdf
2000.pdf
1999-01.pdf
2000-01.pdf
1999-01-01.pdf
2000-01-01.pdf

# Good, later number date
1999.1900.pdf
2000.1900.pdf
1999-01.1900.pdf
2000-01.1900.pdf
1999-01-01.1900.pdf
2000-01-01.1900.pdf

# Good, later number non-date
1999.3000.pdf
2000.3000.pdf
1999-01.3000.pdf
2000-01.3000.pdf
1999-01-01.3000.pdf
2000-01-01.3000.pdf

# Good, nested
foo/1999.pdf
foo/2000.pdf
foo/1999-01.pdf
foo/2000-01.pdf
foo/1999-01-01.pdf
foo/2000-01-01.pdf

# Good, more nested
foo/bar/1999.pdf
foo/bar/2000.pdf
foo/bar/1999-01.pdf
foo/bar/2000-01.pdf
foo/bar/1999-01-01.pdf
foo/bar/2000-01-01.pdf

# Good, nested not date
123/1999.pdf
123/2000.pdf
123/1999-01.pdf
123/2000-01.pdf
123/1999-01-01.pdf
123/2000-01-01.pdf

# Good, nested date
1900/1999.pdf
1900/2000.pdf
1900/1999-01.pdf
1900/2000-01.pdf
1900/1999-01-01.pdf
1900/2000-01-01.pdf

# Good, more specific date
1999/1999-01.pdf
2000/2000-01.pdf
1999/1999-01-01.pdf
2000/2000-01-01.pdf
EOF
}

Main "$@"
