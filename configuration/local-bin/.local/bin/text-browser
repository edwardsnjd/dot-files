#!/usr/bin/env bash

# Usage: text-browser
#
# fzf search of rendered text.

set -o nounset
#set -o errexit
set -o pipefail
#set -o xtrace

function Main() {
  local cmd="search"
  local others=()

  while [[ $# -gt 0 ]]; do
    case $1 in
      -s|--search) cmd="search" && shift ;;
      -f|--filter) cmd="filter" && shift ;;
      -d|--display) cmd="display" && shift ;;
      -o|--output) cmd="output" && shift ;;
      -e|--edit) cmd="edit" && shift ;;
      -*|--*) echo "Unknown option $1" && exit 1 ;;
      *) others+=("$1") && shift ;;
    esac
  done

  set -- "${others[@]}" # restore positional parameters

  case "$cmd" in
    search) Search "$@" ;;
    filter) Filter "$@" ;;
    output) Output "$@" ;;
    display) Display "$@" ;;
    edit) Edit "$@" ;;
    *) echo "Unknown command $cmd" && exit 1 ;;
  esac
}

function Search {
  local query="${1:-}"
  local tmp="$(mktemp)"

  local rgPrefix="rg --line-number --column --smart-case --hidden --color=always --sort=path"

  local preview="highlight-text {1} {2}"
  local filter="$0 --filter {q} < $tmp"
  local display="paste {f+1} {f+2} | $0 --display"
  local output="paste {f+1} {f+2} | $0 --output"
  local edit="paste {f+1} {f+2} {f+3} {f+4} | $0 --edit"

  local magenta=$(tput setaf 5) # see terminfo
  local normal=$(tput sgr0) # see terminfo
  local nl=$'\n'
  local header1="∷ Display: ${magenta}C-/${normal} toggle preview, ${magenta}C-S${normal} toggle sort, ${magenta}A-a${normal} select all, ${magenta}A-d${normal} deselect all"
  local header2="∷ Actions: ${magenta}Enter${normal} display selected, ${magenta}A-Enter${normal} edit selected, ${magenta}C-o${normal} output selected, ${magenta}C-f${normal} filter current search"
  local header="${header1}${nl}${header2}"

  $rgPrefix "$query" | tee "$tmp" \
    | fzf \
      --ansi \
      --reverse \
      --prompt "Text> " \
      --header "$header" \
      --preview "$preview" \
      --query "$query" \
      --delimiter ":" \
      --with-nth "1,2,4.." \
      --multi \
      --disabled \
      --no-sort \
      --preview-window "~3,+{2}+3-/2" \
      --bind "change:reload:sleep 0.1; $rgPrefix {q} | tee $tmp || true" \
      --bind "ctrl-/:change-preview-window(bottom|hidden|default)" \
      --bind "ctrl-s:toggle-sort" \
      --bind "alt-a:select-all" \
      --bind "alt-d:deselect-all" \
      --bind "ctrl-f:execute($filter)" \
      --bind "ctrl-o:execute($output)" \
      --bind "alt-enter:execute($edit)" \
      --bind "enter:execute($display)"

  # Tidy up
  rm "$tmp"
}

function Filter() {
  local query="${1:-}"

  local preview="highlight-text {1} {2}"
  local display="paste {f+1} {f+2} | $0 --display"
  local output="paste {f+1} {f+2} | $0 --output"
  local edit="paste {f+1} {f+2} {f+3} {f+4} | $0 --edit"

  local magenta=$(tput setaf 5) # see terminfo
  local normal=$(tput sgr0) # see terminfo
  local nl=$'\n'
  local header1="∷ Display: ${magenta}C-/${normal} toggle preview, ${magenta}C-S${normal} toggle sort, ${magenta}A-a${normal} select all, ${magenta}A-d${normal} deselect all"
  local header2="∷ Actions: ${magenta}Enter${normal} display selected, ${magenta}A-Enter${normal} edit selected, ${magenta}C-o${normal} output selected, ${magenta}C-c${normal} back to search"
  local header="${header1}${nl}${header2}"

  fzf \
    --ansi \
    --reverse \
    --prompt "Text> $query (filter)> " \
    --header "$header" \
    --preview "$preview" \
    --delimiter ":" \
    --with-nth "1,2,4.." \
    --multi \
    --sync \
    --no-sort \
    --preview-window "~3,+{2}+3-/2" \
    --bind "ctrl-/:change-preview-window(bottom|hidden|default)" \
    --bind "ctrl-s:toggle-sort" \
    --bind "alt-a:select-all" \
    --bind "alt-d:deselect-all" \
    --bind "ctrl-o:execute($output)" \
    --bind "alt-enter:execute($edit)" \
    --bind "enter:execute($display)"

  # Force happy exit code (expect to quit fzf with Ctrl-C)
  return 0
}

# Paginate one file at a time so we can jump to the correct line
function Display() {
  while IFS=$'\t' read -r file line; do
    paginate --jump-target=5 --hilite-unread +"$line" "$file"
  done < "${1:-/dev/stdin}"
}

# Display the selected lines with context for all files
function Output() {
  local context=4

  while IFS=$'\t' read -r file line; do
    local from=$(( $line - $context ))
    local to=$(( $line + $context ))
    echo "$file:$line" \
      | centre --filler "~" \
      | sed "s/^./#/;s/.$/#/"
    render "$file" \
      | awk -v line="$line" -v from="$from" -v to="$to" '
        { if (NR != line) prefix=" "; else prefix=">" }
        from <= NR && NR <= to { print prefix, $0 }
      '
  done < "${1:-/dev/stdin}"
}

# Edit the selected files
function Edit() {
  vim -q <(awk -F $'\t' -v OFS=$':' '{ $1=$1; print }')
}

Main "$@"
