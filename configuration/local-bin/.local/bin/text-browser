#!/usr/bin/env bash

# Usage: text-browser
#
# fzf browse of rendered text.

set -o nounset
#set -o errexit
set -o pipefail
#set -o xtrace

function Main() {
  local cmd="browse"
  local others=()

  while [[ $# -gt 0 ]]; do
    case $1 in
      -b|--browse) cmd="browse" && shift ;;
      -d|--display) cmd="display" && shift ;;
      -o|--output) cmd="output" && shift ;;
      -e|--edit) cmd="edit" && shift ;;
      -*|--*) echo "Unknown option $1" && exit 1 ;;
      *) others+=("$1") && shift ;;
    esac
  done

  set -- "${others[@]}" # restore positional parameters

  case "$cmd" in
    browse) Browse "$@" ;;
    output) Output "$@" ;;
    display) Display "$@" ;;
    edit) Edit "$@" ;;
    *) echo "Unknown command $cmd" && exit 1 ;;
  esac
}

function Browse {
  local query="${1:-}"

  local preview="highlight-text {1} {2}"
  local display="paste {f+1} {f+2} | $0 --display"
  local output="paste {f+1} {f+2} | $0 --output"
  local edit="paste {f+1} {f+2} | $0 --edit"

  local magenta=$(tput setaf 5) # see terminfo
  local normal=$(tput sgr0) # see terminfo
  local nl=$'\n'
  local header1="∷ Display: ${magenta}C-/${normal} toggle preview, ${magenta}C-S${normal} toggle sort, ${magenta}A-a${normal} select all, ${magenta}A-d${normal} deselect all"
  local header2="∷ Actions: ${magenta}Enter${normal} display selected, ${magenta}A-Enter${normal} edit selected, ${magenta}C-o${normal} output selected"
  local header3="∷ Search: ${magenta}C-R${normal} search (default), ${magenta}C-f${normal} filter current search"
  local header="${header1}${nl}${header2}${nl}${header3}"

  local rgPrefix="rg --line-number --smart-case --hidden --color=always"

  local rgPrompt="Text> "
  local fzfPrompt="Text (filter)> "

  $rgPrefix "$query" \
    | fzf \
      --ansi \
      --reverse \
      --prompt "$rgPrompt" \
      --header "$header" \
      --preview "$preview" \
      --query "$query" \
      --delimiter=":" \
      --nth="3.." \
      --multi \
      --disabled \
      --no-sort \
      --preview-window "~3,+{2}+3-/2" \
      --bind "change:reload:sleep 0.08; $rgPrefix {q} || true" \
      --bind "ctrl-r:rebind(change)+disable-search+change-prompt($rgPrompt)+reload:$rgPrefix {q} || true" \
      --bind "ctrl-f:unbind(change)+enable-search+change-prompt($fzfPrompt)" \
      --bind "ctrl-/:change-preview-window(bottom|hidden|default)" \
      --bind "ctrl-s:toggle-sort" \
      --bind "alt-a:select-all" \
      --bind "alt-d:deselect-all" \
      --bind "ctrl-o:execute($output)" \
      --bind "alt-enter:execute($edit)" \
      --bind "enter:execute($display)"

  # Force happy exit code (expect to quit fzf with Ctrl-C)
  return 0
}

function Display() {
  # Paginate one file at a time so we can jump to the correct line
  while IFS=$'\t' read -r file line; do
    paginate --jump-target=5 --hilite-unread +"$line" "$file"
  done < "${1:-/dev/stdin}"
}

function Output() {
  # Display the selected lines with context for all files

  local context=4

  while IFS=$'\t' read -r file line; do
    local from=$(( $line - $context ))
    local to=$(( $line + $context ))
    echo "$file:$line" \
      | centre --filler "~" \
      | sed "s/^./#/;s/.$/#/"
    render "$file" \
      | awk -v line="$line" -v from="$from" -v to="$to" '
        { if (NR != line) prefix=" "; else prefix=">" }
        from <= NR && NR <= to { print prefix, $0 }
      '
  done < "${1:-/dev/stdin}"
}

function Edit() {
  # Edit the selected files (TODO: jump to correct lines)
  cut -f1 \
    | sort \
    | uniq \
    | tr '\n' '\0' \
    | xargs -0 vim
}

Main "$@"
