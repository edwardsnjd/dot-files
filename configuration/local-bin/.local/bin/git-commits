#!/usr/bin/env bash

# NAME
#   git-commits - Opinionated git log suitable for furtuer processing
#
# SYNOPSIS
#   git-commits [<args...>]
#   git commits [<args...>]
#
# OPTIONS
#   <args...>
#       Any arguments to supply to the underlying `git log`.
#
# OUTPUT
#   Print stats about every commit in a Git repository:
#   <sha> <authored-at> <author-name> <author-email> <committed-at> <committer-name> <committer-email>
#
#   Use the `--date` arg to set the format of the date columns to any supported `git log` date format:
#   <sha> <authored-at> <author-name> <author-email> <committed-at> <committer-name> <committer-email>
#         ^^^^^^^^^^^^^                              ^^^^^^^^^^^^^^
#
# EXAMPLE
#   $ git commits --date="format:%u-%a" | head -3 | column -s$'\t' -t
#   2116a66  2-Tue  Nicholas Edwards  foo@bar.com  3-Wed  Nicholas Edwards  foo@bar.com
#   6039889  3-Wed  Nicholas Edwards  bar@foo.com  3-Wed  Nicholas Edwards  bar@foo.com
#   724ca4c  2-Tue  edwardsnjd        bar@foo.com  2-Tue  GitHub            noreply@github.com
#
# DEPENDENCIES
#   bash and git

set -o nounset
set -o errexit
#set -o xtrace

# List core information about all commits
function GitCommits {
  git log \
    --pretty="tformat:%h	%ad	%aN	%aE	%cd	%cN	%cE" \
    --date="iso-strict" \
    "$@"
}

GitCommits "$@"
