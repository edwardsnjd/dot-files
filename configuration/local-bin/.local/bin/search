#!/usr/bin/env bash

# Usage: search [options] QUERY
#        search foo | search -t/--tsv
#        search foo | search -t | search -x/--extension
#        search foo | search -s
#        search --tag TAG
#
# In the first form, recursively search all files and directories for the given
# query.
#
# Options: -b, --browse = browse results (default) -B, --no-browse = just
# output results rather than browsing
#
# Each match is listed, so multiple matches on the same source line will result
# in multiple search results.
#
# By default matches are browsed in `fzf` for ease of browsing and selection,
# then any selections are printed to stdout.
#
# With the `--no-browse` (or `-B`) option then the results are all printed to
# stdout without browsing.
#
# In the second form, with `--tsv`, convert output from colon delimited to tab
# delimited
#
# In the third form, with `--extension`, add an additional column to the tsv
# for the extension.
#
# In the fourth form, with `--select`, select the input from stdin.
#
# In the fifth form, with `--tag`, browse available tags (from ctags `tags`
# file)

set -o nounset
set -o errexit
set -o pipefail
#set -o xtrace

Main() {
  local browse=1
  local query=""

  while [[ $# -gt 0 ]]; do
    case "$1" in
      -b|--browse) browse=1 ;;
      -B|--no-browse) browse=0 ;;
      -s|--select) shift; Select "$@"; exit ;;
      -t|--tsv) shift; ColonToTsv "$@"; exit ;;
      --tag) shift; SelectTag "$@"; exit ;;
      -x|--extension) shift; InsertExtensionColumn "$@"; exit ;;
      *) query="$1"
    esac

    shift
  done

  if [[ $browse -eq 1 ]]; then
    Browse "$query"
  else
    List "$query"
  fi
}

function List() {
  local query="$1"
  rg \
    --vimgrep \
    --smart-case \
    --hidden \
    --glob "!/.git/" \
    --color=auto \
    "$query"
}

function Browse() {
  local query="$1"
  rg \
    --vimgrep \
    --smart-case \
    --hidden \
    --glob "!/.git/" \
    --color=always \
    "$query" \
  | Select
}

function Select() {
  fzf \
    --ansi \
    --multi \
    --delimiter=":" \
    --with-nth="1,4.." \
    --bind "ctrl-/:toggle-preview,alt-a:select-all,alt-d:deselect-all" \
    --preview 'highlight-text {1} {2}' \
    --preview-window "~3,+{2}+3-/2"
}

function SelectTag() {
  local query="$1"

  # Extract the line number as field 6 for ease of use in fzf, then remove
  # after
  sed -E "s/\tline:([0-9]+)/&\t\1/" tags \
  | fzf \
    --delimiter "\t" \
    --bind "ctrl-/:toggle-preview" \
    --preview 'highlight-text {2} {6}' \
    --preview-window "~3,+{6}+3-/2" \
    --query "$query" \
  | cut -d $'\t' -f1-5
}

function ColonToTsv() {
  sed 's/\t/    /g' \
   | sed -E 's/^([^:]+):([^:]+):([^:]+):(.*)$/\1\t\2\t\3\t\4/'
}

function InsertExtensionColumn() {
  awk -v FS="\t" -v OFS="\t" '{ n=$1; sub(".*\\.", "", n); sub(".*/", "", n); print $1, n, $2, $3, $4 }'
}

Main "$@"
