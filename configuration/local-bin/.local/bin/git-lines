#!/usr/bin/env bash

# NAME
#   git-lines - Opinionated git blame suitable for further processing
#
# SYNOPSIS
#   git-lines [--date <format>] [<args...>] -- [<paths...>]
#   git lines [--date <format>] [<args...>] -- [<paths...>]
#
# DESCRIPTION
#   Print stats about the commit that last modified each line in the mentioned files
#   and directories.
#
# OPTIONS
#   --date <format>
#       Optionally override the strftime format string (defaults to ISO8601-ish via `%FT%T%z`)
#   <args...>
#       Any arguments to supply to the underlying `git blame`.
#   -- <paths...>
#       Optionally specify the file/directory path(s) to include (defaults to current dir).
#       The `--` prefix is not optional because git blame only supports a single file
#       at at time, so we handle this specially.
#
# OUTPUT
#   A TSV output line for every line in the file(s):
#   <sha> <authored-at> <author-name> <author-email> <committed-at> <committer-name> <committer-email> <path> <contents>
#
#   If provided, the `strftime` date format `--date` is used to format the date columns:
#   <sha> <authored-at> <author-name> <author-email> <committed-at> <committer-name> <committer-email> <path> <contents>
#         ^^^^^^^^^^^^^                             ^^^^^^^^^^^^^^^
#
# EXAMPLE
#   $ git lines -- README.md | head -3
#   6150a32b	2020-06-19T23:05:09+0800	Nicholas Edwards	foo@bar.com	README.md
#   6150a32b	2020-06-19T23:05:09+0800	Nicholas Edwards	foo@bar.com	README.md
#   96c08d92	2022-03-14T21:14:49+0800	Nicholas Edwards	foo@bar.com	README.md
#
# DEPENDENCIES
#   bash, git, and gawk (with strftime and gensub)

set -o nounset
set -o errexit
#set -o xtrace

# List core information about all lines in the given file
function GitLines {
  local dateFormat="%FT%T%z"
  local args=()
  local paths=()

  while [[ $# -gt 0 ]]; do
    case $1 in
      --date) dateFormat="$2" && shift && shift ;;
      --)
        shift
        while [[ $# -gt 0 ]]; do
          paths+=("$1") && shift
        done
        ;;
      *) args+=("$1") && shift ;;
    esac
  done

  # Default to pwd
  if [[ ${#paths[@]} -eq 0 ]]; then
    paths+=(".")
  fi

  for path in "${paths[@]}"; do
    git ls-files -- "$path" | while read file; do
      if [[ -f "$file" ]]; then
        # Output blame info for each line individually so it's possible to process
        # each line independently
        git blame --line-porcelain "${args[@]}" -- "$file"
      fi
    done
  done \
    | FormatBlame "${dateFormat}"
}

# Reformat the `git blame --line-porcelain` multiline format into a single line
function FormatBlame() {
  local dateFormat="$1"

  gawk -v dateFormat="${dateFormat}" '
    BEGIN {
      OFS = "	"

      # Each line of the porcelain output holds one field
      hashPattern          = @/^([0-9a-z]{8})[0-9a-z]+ [0-9]+ [0-9]+.*$/
      authorPattern        = @/^author (.*)$/
      authorMailPattern    = @/^author-mail <(.*)>$/
      authorTimePattern    = @/^author-time (.*)$/
      authorTzPattern      = @/^author-tz (.*)$/
      committerPattern     = @/^committer (.*)$/
      committerMailPattern = @/^committer-mail <(.*)>$/
      committerTimePattern = @/^committer-time (.*)$/
      committerTzPattern   = @/^committer-tz (.*)$/
      summaryPattern       = @/^summary (.*)$/
      filenamePattern      = @/^filename (.*)$/
      textPattern          = @/^	(.*)$/
    }

    # Remember the fields as we go
    $0 ~ hashPattern          { hash          = gensub(hashPattern          , "\\1", "g") }
    $0 ~ authorPattern        { author        = gensub(authorPattern        , "\\1", "g") }
    $0 ~ authorMailPattern    { authorMail    = gensub(authorMailPattern    , "\\1", "g") }
    $0 ~ authorTimePattern    { authorTime    = gensub(authorTimePattern    , "\\1", "g") }
    $0 ~ authorTzPattern      { authorTz      = gensub(authorTzPattern      , "\\1", "g") }
    $0 ~ committerPattern     { committer     = gensub(committerPattern     , "\\1", "g") }
    $0 ~ committerMailPattern { committerMail = gensub(committerMailPattern  , "\\1", "g") }
    $0 ~ committerTimePattern { committerTime = gensub(committerTimePattern , "\\1", "g") }
    $0 ~ committerTzPattern   { committerTz   = gensub(committerTzPattern   , "\\1", "g") }
    $0 ~ summaryPattern       { summary       = gensub(summaryPattern       , "\\1", "g") }
    $0 ~ filenamePattern      { filename      = gensub(filenamePattern      , "\\1", "g") }
    $0 ~ textPattern          { text          = gensub(textPattern          , "\\1", "g") }

    # Output only on text lines (which is last line of each block)
    $0 ~ textPattern {
      pAuthorDate = strftime(dateFormat, authorTime)
      pCommitDate = strftime(dateFormat, committerTime)
      pText = gensub(@/	/, "⇒", "g", text)
      pText = gensub(@//, "¶", "g", pText)
      print hash, pAuthorDate, author, authorMail, pCommitDate, committer, committerMail, filename, pText
    }
  '
}

GitLines "$@"
